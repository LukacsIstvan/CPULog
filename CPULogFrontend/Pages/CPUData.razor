@page "/cpudata"
@using CPULogFrontend.Models;
@using CPULogFrontend.Services.CpuDataService;
@using Microsoft.AspNetCore.Components.Authorization;
@inject HttpClient http;
@inject ICPUDataService cpuDataService;
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>CPUData</h3>
@if (responseMessage != string.Empty)
{
    <!-- Display server response -->
    <div class="alert alert-info">
        <strong>Info!</strong> @responseMessage
    </div>
}
@if (IsAuthenticated)
{
    @if (cpuDataService.CPUData == null)
    {
        <p><em>Loading...</em></p>
    }

    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Address</th>
                    <th>Load</th>
                    <th>Temp. (C)</th>
                    <th>Timestamp</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var cpu in cpuDataService.CPUData)
                {
                    <tr>
                        <td>@cpu.Id</td>
                        <td>@cpu.Ip</td>
                        <td>@cpu.Load?.ToString("N0") %</td>
                        <td>@cpu.Temperature °C</td>
                        <td>@cpu.Timestamp</td>
                    </tr>
                }
            </tbody>
        </table>
    }
}
else
{
    <p>You need to login to access this page.</p>
    <div class="text-center">
        <a href="/login">Login</a>
    </div>
}

@code {
    private string responseMessage = string.Empty;

    private AuthenticationState authState;

    private bool IsAuthenticated => authState?.User?.Identity?.IsAuthenticated ?? false;

    protected override async Task OnInitializedAsync()
    {
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        await cpuDataService.Get();
    }

}
