@page "/clientdata"
@using CPULogFrontend.Models;
@using CPULogFrontend.Services.ClientService;
@using CPULogFrontend.Services.CpuDataService;
@using System.Net.Http.Headers;
@using Microsoft.AspNetCore.Components.Authorization;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IClientService clientService;
@inject ICPUDataService cpudataService;

<h3>Clients</h3>
@if (responseMessage != string.Empty)
{
    <!-- Display server response -->
    <div class="alert alert-info">
        <strong>Info!</strong> @responseMessage
    </div>
}
@if (IsAuthenticated)
{
    @if (clientService.Clients == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Address</th>
                    <th>SensorTimer</th>
                    <th>CPUData</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var client in clientService.Clients)
                {
                    <tr>
                        <td>@client.Id</td>
                        <td>@client.Ip</td>
                        <td class="w-auto">
                            <input @bind="client.SensorTimer" type="text" class="form-control" style="width: 100px;" />
                            <button type="button" class="col-xs-2 btn btn-primary" @onclick="args => SetSensor(client.Id, client.SensorTimer)">Save</button>
                        </td>
                        <td><button class="btn btn-primary" @onclick="args => ShowCpuData(client.Id)">show cpu</button></td>
                    </tr>
                }
            </tbody>
        </table>
    }
    @if (show)
    {
        @if (cpudataService.CPUData == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <h2>CPU data</h2>
            <table class="table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Address</th>
                        <th>Load</th>
                        <th>Temp. (C)</th>
                        <th>Timestamp</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var cpu in cpudataService.CPUData)
                    {
                        <tr>
                            <td>@cpu.Id</td>
                            <td>@cpu.Ip</td>
                            <td>@cpu.Load?.ToString("N0") %</td>
                            <td>@cpu.Temperature °C</td>
                            <td>@cpu.Timestamp</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
}
else
{
    <p>You need to login to access this page.</p>
    <div class="text-center">
        <a href="/login">Login</a>
    </div>
}

@code {
    private string responseMessage = string.Empty;

    private AuthenticationState authState;

    private bool IsAuthenticated => authState?.User?.Identity?.IsAuthenticated ?? false;

    protected override async Task OnInitializedAsync()
    {
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        await clientService.Get();
    }

    public bool show = false; 
    private async void ShowCpuData(int id)
    {
        show = true;
        await cpudataService.GetByClient(id);
    }

    private async void SetSensor(int id, double value)
    {
        await clientService.SetSensor(id, value);
        responseMessage = $"Sensor timer is set to {value}";
    }
}
