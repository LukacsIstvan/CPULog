@page "/login"
@using CPULogFrontend.Models;
@using CPULogFrontend.Services.AuthService;
@inject HttpClient http;
@inject AuthService authService
@inject NavigationManager NavigationManager


<h3>Login</h3>
<div class="row">
    <div class="col-md-4 mx-auto">
        <form method="post" @onsubmit="TryLogin">
            @if (responseMessage != string.Empty)
            {
                <!-- Display server response -->
                <div class="alert alert-info">
                    <strong>Info!</strong> @responseMessage
                </div>
            }
            <!-- Username input -->
            <div class="form-outline mb-4">
                <input @bind="model.Username" type="text" class="form-control" />
                <label class="form-label">Username</label>
                <span></span>
            </div>

            <!-- Password input -->
            <div class="form-outline mb-4">
                <input @bind="model.Password" type="password" class="form-control" />
                <label class="form-label">Password</label>
                <span></span>
            </div>

            <!-- Submit button -->
            <button type="submit" class="btn btn-primary btn-block mb-4">Sign in</button>

            <!-- Register buttons -->
            <div class="text-center">
                <a href="/register">Register</a>
            </div>
        </form>
    </div>
</div>

@code {
    private Models.Login model = new Models.Login();
    private string responseMessage = string.Empty;

    private async Task TryLogin()
    {

        var result = await authService.Login(model);
        if (result)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            responseMessage = "Login failed.";
        }
    }
}
